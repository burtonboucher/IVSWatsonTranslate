[{"id":"2da74bbe.868f14","type":"tab","label":"IVS Translation V0.1","disabled":false,"info":""},{"id":"3bc77e63.fa4562","type":"function","z":"2da74bbe.868f14","name":"set login","func":"\n\nmsg.credentials = {\n    client_id: flow.get(\"client_id\"),\n    client_secret: flow.get(\"client_secret\")\n};\nmsg.headers = {\n    \"Content-Type\": \"application/x-www-form-urlencoded\",\n    \"Accepts\": \"application/json\"\n};\nreturn msg;","outputs":1,"noerr":0,"x":360,"y":875,"wires":[["efa91e17.89a6a"]]},{"id":"2edeb472.4e366c","type":"inject","z":"2da74bbe.868f14","name":"Inject on load","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":true,"onceDelay":"","x":201.00000762939453,"y":840,"wires":[["cacb7fbf.dab2d"]]},{"id":"cacb7fbf.dab2d","type":"function","z":"2da74bbe.868f14","name":"set flow vars","func":"flow.set(\"SMapihost\", \"https://api.video.ibm.com\"); \n\nflow.set(\"client_id\", \"\"); \nflow.set(\"client_secret\", \"\"); \nflow.set(\"token_type\", \"bearer\"); //SM token type\n\n\n// translation\n\nflow.set(\"SM_channel_id\",\"<channel_id>\"); //string  channel_id to monitor\nflow.set(\"translate_field\",\"\"); // multi_select\nflow.set(\"status_log_field\",\"\"); // tag list new 0210/2020 used to update status\n//NOTE: \"/v3/translate\" Must be included in URL. If not add it or the recommended version.\nflow.set(\"translate_apiurl\",\"https://gateway.watsonplatform.net/language-translator/api\");\nflow.set(\"language_source\",\"en-US\");// default source language en-US\nflow.set(\"translate_apikey\",\"\");\nflow.set(\"translate_basic_auth_key\",\"\");\n\n\n// don't change this one unless the version of api changes\n// this just appends the api version to the end of translate API url pulled from Watson Translator Credentials page\nflow.set(\"translate_apiurl\",flow.get(\"translate_apiurl\")+\"/v3/translate\");\n\n\nreturn msg;","outputs":1,"noerr":0,"x":371.75,"y":837.75,"wires":[["d0f65d90.c7c13"]]},{"id":"efa91e17.89a6a","type":"template","z":"2da74bbe.868f14","name":"Auth Form Encode","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"client_id={{credentials.client_id}}&client_secret={{credentials.client_secret}}&grant_type=client_credentials","x":530,"y":875,"wires":[["715580a8.fe919"]]},{"id":"715580a8.fe919","type":"http request","z":"2da74bbe.868f14","name":"OAuth Server","method":"POST","ret":"obj","url":"https://www.ustream.tv/oauth2/token","tls":"","x":730,"y":875,"wires":[["f2e6c8d3.eca788"]]},{"id":"ea5cc2e9.55c9a","type":"debug","z":"2da74bbe.868f14","name":"SM log in","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1235,"y":875,"wires":[]},{"id":"f2e6c8d3.eca788","type":"function","z":"2da74bbe.868f14","name":"flow.set access and refresh token","func":"flow.set(\"access_token\", msg.payload.access_token); //SM access token. Set upon login\nflow.set(\"refresh_token\", msg.payload.refresh_token); //SM refresh token. Set upon login\n\nreturn msg;","outputs":1,"noerr":0,"x":980,"y":875,"wires":[["ea5cc2e9.55c9a"]]},{"id":"d0f65d90.c7c13","type":"debug","z":"2da74bbe.868f14","name":"flow vars","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":529.0000305175781,"y":838.75,"wires":[]},{"id":"5039cce5.025764","type":"inject","z":"2da74bbe.868f14","name":"Inject on load","topic":"","payload":"","payloadType":"date","repeat":"28800","crontab":"","once":true,"onceDelay":"","x":200,"y":875,"wires":[["3bc77e63.fa4562"]]},{"id":"80edba00.c3e848","type":"link out","z":"2da74bbe.868f14","name":"Job Update","links":["3ca1e721.d07308"],"x":510,"y":435,"wires":[]},{"id":"2d8fa1fb.89eefe","type":"http request","z":"2da74bbe.868f14","name":"Get all videos in channel","method":"GET","ret":"obj","url":"","tls":"","x":275,"y":100,"wires":[["e1020a37.8b79d8","506c12df.9850ec"]]},{"id":"2db0fd02.77af82","type":"inject","z":"2da74bbe.868f14","name":"Polling interval ","topic":"","payload":"manual_start","payloadType":"str","repeat":"30","crontab":"","once":false,"onceDelay":0.1,"x":250,"y":40,"wires":[["d704b7ae.a0d1c8"]]},{"id":"d704b7ae.a0d1c8","type":"function","z":"2da74bbe.868f14","name":"set channel flow.get","func":"var apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar channel_id = flow.get(\"SM_channel_id\");\n\n// add channel config in flow var\nvar url = apihost + \"/channels/\" + channel_id + \"/videos.json?filter[protect]=private,public\";\n//https://{{channel_apihost}}/channels/{{CHANNEL_ID}}/videos.json?filter[protect]=private,public\n\n\nvar PutHeader = {\n    \"content-type\":\"application/json\",\n    \"Authorization\":\"Bearer \" + access_token,\n\n    \"Accepts\": \"application/json\"\n\n    };\n\nmsg.url = url;\nmsg.headers = PutHeader;\n\nreturn msg;","outputs":1,"noerr":0,"x":265,"y":70,"wires":[["2d8fa1fb.89eefe","10dcb141.1f952f"]]},{"id":"e1020a37.8b79d8","type":"function","z":"2da74bbe.868f14","name":"get videos","func":"\nmsg.payload= msg.payload.videos\n\nreturn msg;","outputs":1,"noerr":0,"x":235,"y":135,"wires":[["de1a59d0.5be488"]]},{"id":"de1a59d0.5be488","type":"split","z":"2da74bbe.868f14","name":"","splt":"[118,105,100,101,111,115,91,93]","spltType":"bin","arraySplt":1,"arraySpltType":"len","stream":false,"addname":"","x":220,"y":170,"wires":[["72e267f9.b5f548","807ef9f6.99b778"]]},{"id":"506c12df.9850ec","type":"debug","z":"2da74bbe.868f14","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":635,"y":120,"wires":[]},{"id":"72e267f9.b5f548","type":"debug","z":"2da74bbe.868f14","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":636,"y":214,"wires":[]},{"id":"471c82cb.deb0dc","type":"http request","z":"2da74bbe.868f14","name":"get custom metada for field","method":"GET","ret":"obj","url":"","tls":"","x":285,"y":280,"wires":[["76f50f3b.4822c","3531d149.52ebbe"]]},{"id":"d66915c7.596b18","type":"function","z":"2da74bbe.868f14","name":"set msg.video_object","func":"msg.video_id=msg.payload.id;\nvar video_id=msg.payload.id;\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/custom-metadata.json\n\nvar url = apihost + \"/videos/\" + video_id + \"/custom-metadata.json\";\n//var URL0 = global.get(\"channel_apihost\") + \"/videos/\" + \"122243068\" + \"/custom-metadata.json\";\n\nvar PutHeader = {\n    \"content-type\":\"application/json\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\nmsg.url = url;\nmsg.headers = PutHeader;\n\nreturn msg;","outputs":1,"noerr":0,"x":265,"y":245,"wires":[["471c82cb.deb0dc"]]},{"id":"3531d149.52ebbe","type":"function","z":"2da74bbe.868f14","name":"which Caption source field flow.get","func":"\nvar metadata  = [];\nmetadata= msg.payload.metadata;\nvar actionField= flow.get(\"actionField\"); // this must be field type list\nvar translate_field= flow.get(\"translate_field\"); // this must be field type list\nvar caption_id_field = flow.get(\"caption_id_field\");\n//msg.video_download_url = msg.video_object.video_download_url; //need download url\n\n\n// ONLY SETS VALUE: caption_id from SM for downstream functions: re-process WC captions, update validated captions\nfor (n=0; n<metadata.length; n++) {\n    if (metadata[n].field_id == caption_id_field ){//     \"7952\"){\n        msg.caption_id = metadata[n].value; // value array means this must be field type list \n    \n    }\n}\n\n\n\n//captions.json\n\n///*\n// needs to process full job\nfor (i=0; i<metadata.length; i++) {\n    if (metadata[i].field_id == translate_field){\n        // are there any listed? This is an array.\n        //\n        // will need another call to see if there is an exisitng caption \n        // If true Then if there is a default language selected set source else set source lanugage to default from vars. \n        if (metadata[i].value.length >0) {\n            msg.action=\"Translate\";\n           return [msg,null];  \n        }\n        \n   \n        \n    }\n}\n\n\nreturn  [null,msg];\n\n","outputs":2,"noerr":0,"x":305,"y":315,"wires":[["d3c0b40a.87a108","c26c5c59.d7346"],["c631dedc.f9198"]],"outputLabels":["Translate","None"]},{"id":"de9b207b.a88f8","type":"debug","z":"2da74bbe.868f14","name":"Captions list","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":655,"y":400,"wires":[]},{"id":"76f50f3b.4822c","type":"debug","z":"2da74bbe.868f14","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":640,"y":325,"wires":[]},{"id":"c631dedc.f9198","type":"debug","z":"2da74bbe.868f14","name":"No","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":645,"y":370,"wires":[]},{"id":"10dcb141.1f952f","type":"debug","z":"2da74bbe.868f14","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":635,"y":80,"wires":[]},{"id":"d3c0b40a.87a108","type":"debug","z":"2da74bbe.868f14","name":"Translate","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":790,"y":360,"wires":[]},{"id":"e609064a.44bc68","type":"comment","z":"2da74bbe.868f14","name":"README","info":"As-is. Conceptual sample. No error handeling. No support or warranty of anytype. Use at own risk.\n#License? Free to use for any purpose. Need to add a license type?\n\nAll on one flow for ease of deployment. Node_RED version 0.20 supports context down into submaps which will be an upgrade once bluemix supports\n\nMust configure variables bottom of flow.\n\n","x":75,"y":85,"wires":[]},{"id":"1238b4c7.cabc1b","type":"http in","z":"2da74bbe.868f14","name":"start_job<channel_id>","url":"start_job<channel_id>","method":"get","upload":false,"swaggerDoc":"","x":505,"y":20,"wires":[["e952149c.22a278","b9f49c35.0b479"]]},{"id":"b56f0990.71baf8","type":"http response","z":"2da74bbe.868f14","name":"","statusCode":"201","headers":{"Content-Type":"text/plain"},"x":845,"y":20,"wires":[]},{"id":"e952149c.22a278","type":"template","z":"2da74bbe.868f14","name":"","field":"payload","fieldType":"msg","format":"handlebars","syntax":"mustache","template":"Videos ready for proceessing will start now!\n\nOK to Close window","output":"str","x":705,"y":20,"wires":[["b56f0990.71baf8"]]},{"id":"3bbbd4cf.d213ec","type":"catch","z":"2da74bbe.868f14","name":"","scope":["daa80ac0.8ce8d8","74cbf572.50fc8c","1117e441.31ba1c","8313a353.54b89","f644fd1c.97735","ad4fd286.c4c6","13541c95.c7d4a3","7454d743.415b98","efa91e17.89a6a","ee7b3c4.5aa31c","42f13726.f6c438","739cb53d.0897fc","a551c78a.0f2408","24566836.b71278","a853ce55.e97c6","2c1c5765.764878","ee77466.c60bfb8","f4ff4f69.36d18","b957c083.f1d8d","6023f35d.e96d4c","86ef9230.b462d","631caa08.35c1c4","50683e3f.46cc9","a2458130.69401","837c4d65.b74f4","43f125ef.cf0dfc","1551f7ad.66bb78","36a6315.47b74ce","d90830c5.85302","474f531.e3a43ac","638a2e2e.229cf","44d28e43.0134","43bb2c1a.df4634","8d9df4c0.0087a8","89f610f8.b6bbe","81ff30cc.794db","11190d28.072653","112c9238.f5540e","f8d44454.8306a8","f2e6c8d3.eca788","2d8fa1fb.89eefe","cbb52cd7.17009","9ddb3b3d.80be08","471c82cb.deb0dc","7b9ce3e1.54d72c","6ba55030.45304","f83b0064.302b4","facfe20f.9515d","e1020a37.8b79d8","fd4f7086.43e48","b56f0990.71baf8","685f5c1.edc98a4","a3da0304.dcacb","c9355dc2.7b1a6","ecb26338.4ac59","76949f46.1c01c","841d51c6.88c3a","6e83f1c0.3a42c","2d0291ea.1bf29e","2edeb472.4e366c","5039cce5.025764","88de6154.908a4","16f82f71.60b311","ee4fd779.cf8a18","322d9ca3.cd1b64","bbd84faf.722fc","80edba00.c3e848","d3c0b40a.87a108","e09bbbd7.54cc48","95a6b75c.edd868","dca3c37b.20ed4","e5ab45fe.847128","181d9080.1fe49","c645dd8a.36975","81d509be.3aefd8","3b362534.ad013a","8367b31f.66ae3","736f49b1.d706d8","c138d0f1.5720e","a898eb40.27baf8","cc83e3e9.259eb","b9cae4dd.f79868","d0f65d90.c7c13","ec44ef6d.9cd86","c51ec010.c8ae4","506c12df.9850ec","72e267f9.b5f548","76f50f3b.4822c","10dcb141.1f952f","4e509872.32ba68","20a9e4ce.70197c","c425d9a5.2712a8","57c603ea.d2c34c","77f8363f.b1a6f8","e2f859a2.468238","f58728a3.5bb8e8","42da67a1.cfe078","6d51d394.d3f2ec","1023dc80.40db44","950a6145.7e03f","4787642c.3e5b0c","de9b207b.a88f8","50abd24.ecb182c","3d4b00a0.5eca4","2545b8a0.5d21b8","cec3e3de.fe3d9","715580a8.fe919","6ce0d8ba.56df58","1f7c1fe6.d4399","e1074b1.ee803b8","70e807c6.dabe58","2db0fd02.77af82","1fc3eb47.e35245","cc30bb1b.3c5cc8","1002f511.69976b","d2ccf211.45dec","62831480.7cbeac","c631dedc.f9198","3e5422f5.cf2c7e","56258570.5dcc0c","c78d63bf.ad905","e609064a.44bc68","276fe374.12747c","167f56e3.eaffb9","caa30c0.f55abf","1c102142.b071bf","8b08787.d213a88","1aef25ba.3e8c5a","151be231.223cce","55f0bd8.d287444","d704b7ae.a0d1c8","cacb7fbf.dab2d","6be64be0.7b4c74","50bfd0c6.48187","b58a4de0.b3c29","3bc77e63.fa4562","8dc7b679.749de8","d66915c7.596b18","425eaab9.181194","28f5fef2.261452","2f7790ee.cf69e","e00ce121.f363d","6d6670aa.2d068","70728556.faa84c","372a5986.cdba66","211caf6a.7e855","e16ff8e1.b1dbf8","4bb073d4.e87d0c","46ce97b.3f96e68","d5e04dba.ffb1c","51b29b58.f91824","ea5cc2e9.55c9a","1e263b30.3983d5","1b91dd21.a8ee43","de1a59d0.5be488","b1bb037e.5fcd6","cc97d573.2e0ff8","420d573d.be9348","fb09a249.3772e","1238b4c7.cabc1b","efd0751b.7c3ab8","e952149c.22a278","3d1f1d4c.ced942","19be146e.00cfdc","15822cb9.c5bf53","2f04a98b.0c37b6","b6f8d4f9.b940b8","eed06699.b6d008","8f925b28.758768","236b33ff.4d1c2c","6be1cb5d.1e0204","11283a18.705cd6","7ea124e9.9af23c","3ca1e721.d07308","2a6382ae.f9046e","9791a47c.d55e18","79549fb5.aea73","7fb35ba6.61dba4","4cbdbb2c.b37d14","97440c75.d2b1d","7b63b4da.9279dc","e5e6dd6c.ae0a","5b92b75c.4f8fd8","503832bd.bf380c","a5c6dc91.73cc1","9c08b62a.358d18","dfa82f9d.3782","823430ea.208d8","e9268a37.71b968","f3838c74.ff41e","f370f4ad.ca2a38","6a261fe4.1fbab","a7cf6170.c27c9","fef6c526.483208","ca1a06fa.e305a8","e1fe7193.f4bc1","ab491f82.d9638","753b7e2c.2c5aa","65bb4b51.5770f4","e4bbb39b.de554","68dadb85.963d14","9058ff29.35a32","d98735e1.36b688","8cfd5266.7e258","1cbcdcad.b603a3","e58922b5.f5ace","4c62420f.e42bdc","23869a94.00bba6","f494b0b3.74794","643a1c3e.aa0934","a351c66.ad15038","62ac9f0a.cb628","51e0047e.7cadcc","c7e4b54e.907478","69650fcd.fd063","3531d149.52ebbe","f008a826.49ce98","a9741374.249dd","edc0214b.99b5f","6915c8df.f071e8","3e4b6b71.fa9ee4","f3efdd96.16fb1","7e7660f0.4a5d5","a2e3a2a2.689e7"],"x":150,"y":975,"wires":[["f8d44454.8306a8"]]},{"id":"f8d44454.8306a8","type":"debug","z":"2da74bbe.868f14","name":"flow errors","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":600,"y":975,"wires":[]},{"id":"1551f7ad.66bb78","type":"function","z":"2da74bbe.868f14","name":"create xlate msgs","func":"// get translate_field \nmsg.translate_field=flow.get(\"translate_field\"); //flow.set(\"translate_field\",\"8174\"); IVS field multi select\n// get translate_field values\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id; // make sure passed on at msg level\nvar caption_id=msg.caption_id; // make sure passed on at msg level\nvar WEBVTT=msg.WEBVTT;\nmsg.payload={};\nmsg.caption_id=caption_id;\nmsg.video_id =video_id;\nmsg.WEBVTT=WEBVTT;\n//WEBVTT make sure passed on at msg level\n/* test video_id = \"123509218\";\ncaption_id=\"somecaption\";\nmsg.video_id= video_id;\nmsg.caption_id=caption_id;\n*/\n\n//GET https://{{channel_apihost}}/videos/{{VIDEO_ID}}/custom-metadata.json \nvar url = apihost + \"/videos/\" + video_id + \"/custom-metadata.json\";  // \n\nvar PutHeader = {\n    \"content-type\":\"application/json;charset=UTF-8\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\nmsg.url = url;\nmsg.headers = PutHeader;\nmsg.method= \"GET\";\n\n// get translate value - itterate\n// set values for translate and IVS field values. \n\n\nreturn msg;","outputs":1,"noerr":0,"x":1460,"y":420,"wires":[["c2874377.a8b8a"]]},{"id":"1f7c1fe6.d4399","type":"debug","z":"2da74bbe.868f14","name":"org msg","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1695,"y":460,"wires":[]},{"id":"7ea124e9.9af23c","type":"function","z":"2da74bbe.868f14","name":"translate messages","func":"\n// set values for translate and IVS field values. \n// might want to programmaticaly create translate_model_id. Support multiple source languages. eg. en-es, fr-es, de-es. \n// might also want to take source language and create a captions publish.\n//var parts = msg.parts;\nmsg.parts={}; //20191001\n\nvar metadata = msg.payload.metadata;\nvar translate_to_languages; \nvar translate_field=flow.get(\"translate_field\");\nvar video_id = msg.video_id; // make sure passed on at msg level\nvar caption_id=msg.caption_id; // make sure passed on at msg level\nvar WEBVTT= msg.WEBVTT; // make sure passed on at msg level\nvar translateMsgs = []; // used to send unknown number of translate to messages. eg Spanish, French,....\nvar translate_model_id;\nvar source_language_code = msg.language_source.substring(0,2).toLowerCase();\n\n// https://cloud.ibm.com/docs/services/language-translator?topic=language-translator-identifiable-languages\n// https://{{channel_apihost}}/caption-languages.json\n//msg.payload={};\n//translate_to_languages.forEach(get_language_settings);\n// get translate values - new message for each translate value found\nvar tmpLang;\nvar tmpvalue;\nfor (i=0; i<metadata.length; i++) {\n    if (metadata[i].field_id == translate_field){\n        tmpLang=\"\";\n        tmpvalue=metadata[i].value.length;\n        for (il=0; il<tmpvalue; il++) {\n            tmpLang=metadata[i].value[il].name; \n// value array means this must be field type list \n       // msg.actionValue=metadata[i].value;  // could be abstracted more by id of the object which \"2002\" = 'Complete' on source demo system\n            switch(tmpLang) {\n             case \"Arabic\":\n                translate_model_id=source_language_code + \"-ar\";\n                language_target=\"ar-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n             case \"Bulgarian\":\n                translate_model_id=source_language_code + \"-bg\";\n                language_target=\"bg-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n             case \"Croatian\":\n                translate_model_id=source_language_code + \"-hr\";\n                language_target=\"hr-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n                case \"Czech\":\n                translate_model_id=source_language_code + \"-cs\";\n                language_target=\"cs-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n              case \"Danish\":\n                translate_model_id=source_language_code + \"-da\";\n                language_target=\"da-00\";\n                translateMsgs.push({translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n                case \"Dutch\":\n                translate_model_id=source_language_code + \"-nl\";\n                language_target=\"nl-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n                case \"Estonian\":\n                translate_model_id=source_language_code + \"-et\";\n                language_target=\"et-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                                \n              case \"Finnish\":\n                translate_model_id=source_language_code + \"-fi\";\n                language_target=\"fi-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n                case \"French\":\n                translate_model_id=source_language_code + \"-fr\";\n                language_target=\"fr-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n                case \"German\":\n                translate_model_id=source_language_code + \"-de\";\n                language_target=\"de-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n\n              case \"Greek\":\n                translate_model_id=source_language_code + \"-el\";\n                language_target=\"el-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n              case \"Hebrew\":\n                translate_model_id=source_language_code + \"-he\";\n                language_target=\"he-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n              case \"Hindi\":\n                translate_model_id=source_language_code + \"-hi\";\n                language_target=\"hi-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n              case \"Italian\":\n                translate_model_id=source_language_code + \"-it\";\n                language_target=\"it-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n              case \"Japanese\":\n                translate_model_id=source_language_code + \"-ja\";\n                language_target=\"ja-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n              case \"Korean\":\n                translate_model_id=source_language_code + \"-ko\";\n                language_target=\"ko-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n              case \"Norwegian Bokmal\": //Norwegian Bokmal\n                translate_model_id=source_language_code + \"-nb\";\n                language_target=\"nb-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n              case \"Polish\":\n                translate_model_id=source_language_code + \"-pl\";\n                language_target=\"pl-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n              case \"Portuguese\":\n                translate_model_id=source_language_code + \"-pt\";\n                language_target=\"pt-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n             case \"Romanian\":\n                translate_model_id=source_language_code + \"-ro\";\n                language_target=\"ro-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n\n              case \"Russian\":\n                translate_model_id=source_language_code + \"-ru\";\n                language_target=\"ru-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n              case \"Simplified Chinese\":\n                translate_model_id=source_language_code + \"-zh\";\n                language_target=\"zh-04\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n             case \"Slovak\": \n                translate_model_id=source_language_code + \"-sk\";\n                language_target=\"sk-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                    break;\n                    \n             case \"Slovenian\": \n                translate_model_id=source_language_code + \"-sl\";\n                language_target=\"sl-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                    break;\n                    \n             case \"Spanish\": \n                translate_model_id=source_language_code + \"-es\";\n                language_target=\"es-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                    break;\n                    \n              case \"Swedish\":\n                translate_model_id=source_language_code + \"-sv\";\n                language_target=\"sv-00\";\n                translateMsgs.push({translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n              case \"Traditional Chinese\":\n                translate_model_id=source_language_code + \"-zh-TW\";\n                language_target=\"zh-05\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT });\n                break;\n                \n             case \"Turkish\":\n                translate_model_id=source_language_code + \"-tr\";\n                language_target=\"tr-00\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;\n                \n            case \"English\":\n                translate_model_id=source_language_code + \"-en\";\n                language_target=\"en-US\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;                \n\n             case \"English-GB\":\n                translate_model_id=source_language_code + \"-en\";\n                language_target=\"en-GB\";\n                translateMsgs.push({payload:msg,translate_model_id:translate_model_id,language_target:language_target,caption_id:caption_id,video_id:video_id,WEBVTT:WEBVTT});\n                break;                \n            }\n        }\n        \n    }\n}\nif (translateMsgs.length === 0){\n //   msg={};\n    msg.video_id = video_id;\n    msg.caption_id=caption_id;\n    return [null,null,msg]; // no languages\n}\n//return [translateMsgs,null,null];\nreturn [translateMsgs,msg,null]; // return original msg on line output 2 if desired.\n","outputs":3,"noerr":0,"x":1455,"y":505,"wires":[["dca3c37b.20ed4","e2ddf740.65fb38","980f4ab1.731688","52da64da.43fe0c"],["1f7c1fe6.d4399","b08a77bf.c03c68"],["50abd24.ecb182c"]]},{"id":"dca3c37b.20ed4","type":"debug","z":"2da74bbe.868f14","name":"languages","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1700,"y":420,"wires":[]},{"id":"eed06699.b6d008","type":"inject","z":"2da74bbe.868f14","name":"test","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1220,"y":310,"wires":[["425eaab9.181194"]]},{"id":"50bfd0c6.48187","type":"function","z":"2da74bbe.868f14","name":"set get IVS WEBVTT","func":"var video_id = msg.video_id;\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar language_source = msg.language_source;\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/captions/en-US/vtt\n//var url = apihost + \"/videos/\" + msg.video_id +\"/captions/en-US/vtt\"; // \nvar url = apihost + \"/videos/\" + msg.video_id +\"/captions/\" + language_source + \"/vtt\"; // \n\nvar headers = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\nmsg.method=\"GET\";\nmsg.url = url;\nmsg.headers = headers;\nmsg.payload={};\nreturn msg;","outputs":1,"noerr":0,"x":1475,"y":270,"wires":[["fd4f7086.43e48","77f8363f.b1a6f8"]]},{"id":"fd4f7086.43e48","type":"http request","z":"2da74bbe.868f14","name":"get iVS WebVTT","method":"use","ret":"txt","url":"","tls":"","x":1450,"y":305,"wires":[["329d6fb9.5d385","cbd9745b.00ad38"]]},{"id":"97440c75.d2b1d","type":"function","z":"2da74bbe.868f14","name":"Update captions IVS","func":"// payload is set prior to allow disconnecting and using independantly. Also enables wrapping prior function in split / join. \n// don't combine with prior step unless you understand implications.\\\n\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id;\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/captions/en-US/vtt\nvar url = apihost + \"/videos/\" + video_id + \"/captions/\"+msg.language_target+\"/vtt\";  //\n\nvar PutHeader = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\n\nmsg.url = url;\nmsg.headers = PutHeader;\n\nreturn msg;","outputs":1,"noerr":0,"x":260,"y":560,"wires":[["a853ce55.e97c6","474f531.e3a43ac","e5ab45fe.847128"]]},{"id":"ab491f82.d9638","type":"http request","z":"2da74bbe.868f14","name":"upload caption","method":"PUT","ret":"txt","url":"","tls":"","x":690,"y":565,"wires":[["ee77466.c60bfb8"]]},{"id":"ee77466.c60bfb8","type":"debug","z":"2da74bbe.868f14","name":"captions upload","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":900,"y":565,"wires":[]},{"id":"f370f4ad.ca2a38","type":"http request","z":"2da74bbe.868f14","name":"Update SM field value","method":"use","ret":"txt","url":"","tls":"","x":1055,"y":755,"wires":[["51b29b58.f91824"]]},{"id":"51b29b58.f91824","type":"debug","z":"2da74bbe.868f14","name":"SM field update","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1250,"y":755,"wires":[]},{"id":"3b362534.ad013a","type":"function","z":"2da74bbe.868f14","name":"set make caption visible","func":"//\n\nvar video_id = msg.video_id;\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\n\n//PUT\thttps://api.video.ibm.com/videos/VIDEO_ID/captions/LANGUAGE.FORMAT (format can be json or xml)\n//var url = apihost + \"/videos/\" + video_id + \"/captions/es-00.json\";  // \nvar url = apihost + \"/videos/\" + video_id + \"/captions/\"+ msg.language_target +\".json\";  // \n\n\nvar PutHeader = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n\n    \"Accepts\": \"application/json\"\n\n    };\nvar body = {\n    \"is_visible\": \"true\"\n\n\n}\n\nmsg.url = url;\nmsg.headers = PutHeader;\nmsg.payload = body;\nreturn msg;","outputs":1,"noerr":0,"x":865,"y":615,"wires":[["e5ceb19e.13fc8"]]},{"id":"2545b8a0.5d21b8","type":"comment","z":"2da74bbe.868f14","name":"note for this input","info":"Link in expects msg.video_id & msg.caption_id\n\nto test individually set param in func next to test","x":1324,"y":225.75,"wires":[]},{"id":"425eaab9.181194","type":"function","z":"2da74bbe.868f14","name":"set test","func":"var video_id = \"123541153\"; // your SM video ID goes here\nmsg.video_id = video_id;\nreturn msg;","outputs":1,"noerr":0,"x":1215,"y":345,"wires":[["50bfd0c6.48187"]]},{"id":"841d51c6.88c3a","type":"http request","z":"2da74bbe.868f14","name":"","method":"GET","ret":"obj","url":"","tls":"","x":235,"y":650,"wires":[["86ef9230.b462d"]]},{"id":"1aef25ba.3e8c5a","type":"function","z":"2da74bbe.868f14","name":"set caption status","func":"// \nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id;\n\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/captions.json\nvar url = apihost + \"/videos/\" + video_id + \"/captions.json\";  // \n\n\nvar PutHeader = {\n    \"content-type\":\"application/json\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\n\nmsg.url = url;\nmsg.headers = PutHeader;\nreturn msg;","outputs":1,"noerr":0,"x":255,"y":620,"wires":[["841d51c6.88c3a","1023dc80.40db44"]]},{"id":"86ef9230.b462d","type":"function","z":"2da74bbe.868f14","name":"check caption status","func":"\n        \nvar caption_status=false;\nvar captions;\nvar loopMax = 100;  // 1,000 seconds 16 min to publish caption. \ncaptions = msg.payload.captions;\nvar loopcount=0;\nloopcount=msg.count;\nif (isNaN(loopcount)){\n    msg.count=0;\n}  \nif  (loopcount >loopMax) {\n    return [null,null,msg];\n    }\n\nmsg.count=msg.count +1;\nfor (i=0; i<captions.length; i++){\n        //if (captions[i].language == 'es-00' && captions[i].status == 'active' ){\n        if (captions[i].language == msg.language_target && captions[i].status == 'active' ){    \n            caption_status = true;\n            return [msg,null,null];\n        }\n    \n}\n \nreturn [null,msg,null];\n","outputs":3,"noerr":0,"x":565,"y":635,"wires":[["3b362534.ad013a","42da67a1.cfe078","50fd420c.ccaa5c"],["474f531.e3a43ac","6d51d394.d3f2ec"],["c0c67c03.e69e6"]],"outputLabels":["active","processing",""]},{"id":"474f531.e3a43ac","type":"delay","z":"2da74bbe.868f14","name":"","pauseType":"delay","timeout":"25","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":220,"y":590,"wires":[["1aef25ba.3e8c5a"]]},{"id":"a853ce55.e97c6","type":"debug","z":"2da74bbe.868f14","name":"caption translated","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":520,"y":530,"wires":[]},{"id":"3ca1e721.d07308","type":"link in","z":"2da74bbe.868f14","name":"translate now","links":["80edba00.c3e848","46512edd.cc11f"],"x":1270,"y":270,"wires":[["50bfd0c6.48187"]]},{"id":"50abd24.ecb182c","type":"debug","z":"2da74bbe.868f14","name":"no languages","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1700,"y":500,"wires":[]},{"id":"6d6670aa.2d068","type":"change","z":"2da74bbe.868f14","name":"set WEBVTT","rules":[{"t":"set","p":"WEBVTT","pt":"msg","to":"payload","tot":"msg"},{"t":"delete","p":"payload","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":1445,"y":380,"wires":[["1551f7ad.66bb78"]]},{"id":"77f8363f.b1a6f8","type":"debug","z":"2da74bbe.868f14","name":"set url get ISV caption","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1700,"y":265,"wires":[]},{"id":"e5ab45fe.847128","type":"delay","z":"2da74bbe.868f14","name":"","pauseType":"rate","timeout":"5","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":505,"y":565,"wires":[["ab491f82.d9638"]]},{"id":"42da67a1.cfe078","type":"debug","z":"2da74bbe.868f14","name":"translate complete","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1010,"y":710,"wires":[]},{"id":"6d51d394.d3f2ec","type":"debug","z":"2da74bbe.868f14","name":"translate processing","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":925,"y":645,"wires":[]},{"id":"1023dc80.40db44","type":"debug","z":"2da74bbe.868f14","name":"caption status loop","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":535,"y":725,"wires":[]},{"id":"2a6382ae.f9046e","type":"comment","z":"2da74bbe.868f14","name":"Translate Section","info":"","x":2345,"y":295,"wires":[]},{"id":"a2458130.69401","type":"comment","z":"2da74bbe.868f14","name":"Config & login section Section","info":"set flow vars sets up variables for this flow\n\nLogin sets access and refresh token.\nOnly access token is used","x":135,"y":790,"wires":[]},{"id":"63502fd7.8980b","type":"comment","z":"2da74bbe.868f14","name":"Error handling section","info":"None. Just reports","x":115,"y":930,"wires":[]},{"id":"c0c67c03.e69e6","type":"debug","z":"2da74bbe.868f14","name":"failed caption update","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":925,"y":670,"wires":[]},{"id":"b9f49c35.0b479","type":"change","z":"2da74bbe.868f14","name":"","rules":[{"t":"delete","p":"req","pt":"msg"},{"t":"delete","p":"res","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":725,"y":50,"wires":[["d704b7ae.a0d1c8"]]},{"id":"c2874377.a8b8a","type":"http request","z":"2da74bbe.868f14","name":"","method":"use","ret":"obj","url":"","tls":"","x":1435,"y":460,"wires":[["7ea124e9.9af23c"]]},{"id":"807ef9f6.99b778","type":"change","z":"2da74bbe.868f14","name":"","rules":[{"t":"delete","p":"parts","pt":"msg"},{"t":"delete","p":"headers","pt":"msg"},{"t":"delete","p":"url","pt":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":245,"y":210,"wires":[["d66915c7.596b18"]]},{"id":"e2ddf740.65fb38","type":"function","z":"2da74bbe.868f14","name":"WEBVTT Parser MIT v2","func":"// source: https://github.com/osk/node-webvtt/blob/master/lib/parser.js\n// MIT license\n//Updated Regex to include comma in subsecond time part\n// Burton Boucher 20190910\n// burton.boucher@us.ibm.com\n\n/**\n * See spec: https://www.w3.org/TR/webvtt1/#file-structure\n */\nvar e;\n\nfunction ParserError (message, error) {\n  this.message = message;\n  this.error = error;\n}\n\n//const { message, error } =ParserError.prototype = Object.create(Error.prototype);\n\n\n//const TIMESTAMP_REGEXP = /([0-9]{1,2})?:?([0-9]{2}):([0-9]{2}\\.[0-9]{2,3})/;\nconst TIMESTAMP_REGEXP = /([0-9]{1,2})?:?([0-9]{2}):([0-9]{2}[\\.\\,][0-9]{2,3})/; // optional comma\n\nfunction parse (input, options) {\n  if (!options) {\n    options = {};\n  }\n\n  const { meta = false, strict = true } = options;\n\n  if (typeof input !== 'string') {\n    e= new Error('Input must be a string');\n    throw e;\n  }\n\n  input = input.trim();\n  input = input.replace(/\\r\\n/g, '\\n');\n  //input = input.replace(/\\n[A-Z|a-z|\\d]/g, ' ');\n  input = input.replace(/\\r/g, '\\n');\n\n  const parts = input.split('\\n\\n');\n  const header = parts.shift();\n\n\n\n\n if (!header.startsWith('WEBVTT')) {\n    //throw new ParserError('Must start with \"WEBVTT\"');\n    e = new Error('Must start with \"WEBVTT\"');\n    throw e;\n  }\n\n  const headerParts = header.split('\\n');\n\n  const headerComments = headerParts[0].replace('WEBVTT', '');\n\n  if (headerComments.length > 0 && (headerComments[0] !== ' ' && headerComments[0] !== '\\t')\n  ) {\n    throw new ParserError('Header comment must start with space or tab');\n  }\n\n  // nothing of interests, return early\n  if (parts.length === 0 && headerParts.length === 1) {\n    return { valid: true, strict, cues: [], errors: [] };\n  }\n\n  if (!meta && headerParts.length > 1 && headerParts[1] !== '') {\n    throw new ParserError('Missing blank line after signature');\n  }\n\n  const { cues, errors } = parseCues(parts, strict);\n\n  if (strict && errors.length > 0) {\n    throw errors[0];\n  }\n\n  const headerMeta = meta ? parseMeta(headerParts) : null;\n\n  const result = { valid: errors.length === 0, strict, cues, errors };\n\n  if (meta) {\n    result.meta = headerMeta;\n  }\n\n  return result;\n}\n\nfunction parseMeta (headerParts) {\n  const meta = {};\n  headerParts.slice(1).forEach(header => {\n    const [key, value] = header.split(':').map(t => t.trim());\n    meta[key] = value;\n  });\n  return Object.keys(meta).length > 0 ? meta : null;\n}\n\n\nfunction parseCues (cues, strict) {\n  const errors = [];\n\n  const parsedCues = cues\n    .map((cue, i) => {\n      try {\n        return parseCue(cue, i, strict);\n      } catch (e) {\n        errors.push(e);\n        return null;\n      }\n    })\n    .filter(Boolean);\n\n  return {\n    cues: parsedCues,\n    errors\n  };\n}\n\n\n/**\n * Parse a single cue block.\n *\n * @param {array} cue Array of content for the cue\n * @param {number} i Index of cue in array\n *\n * @returns {object} cue Cue object with start, end, text and styles.\n *                       Null if it's a note\n */\nfunction parseCue (cue, i, strict) {\n  let identifier = \"\";\n  let pause_on_exit=false;\n  let region=null;\n  let direction=\"horizontal\";\n  let snap_to_lines=true;\n  let line=\"auto\";\n  let line_alignment=\"start\";\n  let position=\"auto\";\n  let size=100;\n  let text_alignment=\"center\";\n  let start = 0;\n  let end = 0.01;\n  let text = \"\";\n  let styles = \"\";\n\n  // split and remove empty lines\n  const lines = cue.split('\\n').filter(Boolean);\n\n  if (lines.length > 0 && lines[0].trim().startsWith('NOTE')) {\n    return null;\n  }\n\n  if (lines.length === 1 && !lines[0].includes('-->')) {\n    //throw new ParserError(`Cue identifier cannot be standalone (cue #${i})`);\n    e= new Error(`Cue identifier cannot be standalone (cue #${i})`);\n    throw e;\n  }\n\n  if (lines.length > 1 &&\n      !(lines[0].includes('-->') || lines[1].includes('-->'))) {\n    const msg = `Cue identifier needs to be followed by timestamp (cue #${i})`;\n    //throw new ParserError(msg);\n    e= new Error(msg);\n    throw e;\n    \n  }\n\n  if (lines.length > 1 && lines[1].includes('-->')) {\n    identifier = lines.shift();\n  }\n\n  const times = lines[0].split(' --> ');\n\n  if (times.length !== 2 ||\n      !validTimestamp(times[0]) ||\n      !validTimestamp(times[1])) {\n    //throw new ParserError(`Invalid cue timestamp (cue #${i})`);\n    e= new Error(`Invalid cue timestamp (cue #${i})`);\n    throw e;\n  }\n\n  start = parseTimestamp(times[0]);\n  end = parseTimestamp(times[1]);\n\n  if (strict) {\n    if (start > end) {\n    //  throw new ParserError(`Start timestamp greater than end (cue #${i})`);\n    e= new Error(`Start timestamp greater than end (cue #${i})`);\n    throw e;\n     \n    }\n\n    if (end <= start) {\n    //  throw new ParserError(`End must be greater than start (cue #${i})`);\n    e= new Error(`End must be greater than start  (cue #${i})`);\n    throw e;\n      \n    }\n  }\n\n  if (!strict && end < start) {\n    //throw new ParserError(`End must be greater or equal to start when not strict (cue #${i})`);\n    e= new Error(`End must be greater or equal to start when not strict  (cue #${i})`);\n    throw e;\n\n  }\n\n  // TODO better style validation\n  styles = times[1].replace(TIMESTAMP_REGEXP, '').trim();\n\n  lines.shift();\n\n  text = lines.join('\\n');\n\n  if (!text) {\n    return false;\n  }\n// not all configured. 20190913 burton boucher\n  return { identifier,region,direction,snap_to_lines,line,line_alignment,position,size,text_alignment, start, end, text, styles };\n}\n\n\nfunction validTimestamp (timestamp) {\n  return TIMESTAMP_REGEXP.test(timestamp);\n}\n\nfunction parseTimestamp (timestamp) {\n  const matches = timestamp.match(TIMESTAMP_REGEXP);\n  // correct for comma in some tmestamps. Comma kills millseconds in calc burton boucher 20190928\n  let secs= parseFloat((matches[3]).replace(\",\",\".\"));\n  //let secs = parseFloat(matches[3]);\n  secs += parseFloat(matches[2]) * 60; // mins\n  secs += parseFloat(matches[1] || 0) * 60 * 60; // hours\n  // secs += parseFloat(matches[4]);\n  return secs;\n}\n\n//var WEBVTT=msg.payload;\nvar WEBVTT=\"\";\nWEBVTT=msg.WEBVTT; // from base test.\n\n//var test1={}; Don't use any more memory than needed.\n//test1=parse(WEBVTT,  {meta: true, strict:false });\nmsg.test11=parse(WEBVTT,  {meta: true, strict:false });\nreturn msg;","outputs":1,"noerr":0,"x":2330,"y":395,"wires":[["d014760e.e9bd18","d2e8f093.81c08"]]},{"id":"c6d28149.1caaa","type":"function","z":"2da74bbe.868f14","name":"sentences chunk split","func":"var sentences = [];\nvar blocks=[];\nvar sentences = msg.mysentences; \nvar ncount = sentences.length;\nvar splitSize=4400; // split playload size\nvar sentencePos=0; // last cue position in sentences\nvar sentencesSize=0;\n//msg.payload={};\nmsg.parts = {};\nmsg.parts.id = RED.util.generateId();\nmsg.parts.type = \"array\";\n\nvar count = 0;\nvar testPOS=0;\n\n\n// best practice is to split 4-4.5K for IBM Language Translator. \n/* Design is to use IBM Language Translator API using array input method where each element contains one cue.\nRelies upon IBM Language Translator to provide all sentence segmentation and to properly return translation to each cue\n*/\n\n/* What's needed:\n1. initialize. splitSize, set last sentencePos=0\n2. loop through cues array\n2.1 get sentence.length set to sentenceSize sentencePos ++\n2.2 When sentenceSize > splitSize set sentencePos = sentencePos +1, return message split\n2.3 when end of sentences last split (partial)\n*/\n//\n\nfor (var ict = 0; ict < ncount; ict++){\n    sentencesSize=sentencesSize + sentences[ict].length;\n        if (sentencesSize > splitSize) {\n        msg.parts.index = count; // sets order of how msg will be joined\n        msg.parts.ch=\"\";\n//        msg.parts.count=ncount;\n        blocks.push(sentences.slice(sentencePos,ict+1));\n        msg.payload=blocks;\n       \n        sentencePos=ict+1;\n        count=count+1;\n        //msg.sentencesSize=sentencesSize;\n        sentencesSize=0;\n        //msg.sentencePos=sentencePos;\n        node.send(RED.util.cloneMessage(msg));\n        blocks=[];\n        }else if (ncount < ict+2 ){\n         msg.parts.index = ict+1; // sets order of how msg will be joined\n        msg.parts.index = count;\n        msg.parts.ch=\"\";\n//        msg.parts.count=ncount;\n        blocks.push(sentences.slice(sentencePos,ict+1));\n        msg.payload=blocks;\n       // msg.sentencesSize=sentencesSize;\n       // msg.ict=ict;\n        msg.complete=true; // this is used to signal Join we are ready to assemble split messages.See var ncount above.\n        // send\n        node.send(RED.util.cloneMessage(msg));\n\n        }\n\n}\n\n\n\n\n\n\n//return msg;","outputs":1,"noerr":0,"x":2320,"y":465,"wires":[["ff4de9b6.85cd28","928c754e.8bfdb8"]]},{"id":"ff4de9b6.85cd28","type":"debug","z":"2da74bbe.868f14","name":"chunked","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2525.5557289123535,"y":478.888822555542,"wires":[]},{"id":"ebcb79a4.bc4fd8","type":"join","z":"2da74bbe.868f14","name":"de chunk","mode":"auto","build":"merged","property":"payload","propertyType":"msg","key":"topic","joiner":"\\n","joinerType":"str","accumulate":false,"timeout":"5","count":"","reduceRight":false,"reduceExp":"","reduceInit":"","reduceInitType":"num","reduceFixup":"","x":2280,"y":690,"wires":[["d81faf99.5a4c3","f887e5b2.c73d98"]]},{"id":"d81faf99.5a4c3","type":"debug","z":"2da74bbe.868f14","name":"dechunked ","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2734.4443588256836,"y":662.2222442626953,"wires":[]},{"id":"29f47a35.177726","type":"debug","z":"2da74bbe.868f14","name":"flatten2","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2735,"y":615,"wires":[]},{"id":"b358f685.b35ea8","type":"function","z":"2da74bbe.868f14","name":"sentence to cue v1","func":"var sentenceCues=[];\ncues=msg.sentences.cues;\n//var sentences=[];\n//sentences= msg.mysentences;\nsentences= Array.from(msg.payload);\nvar outCueTest;\nvar debug1=\"no\";\nvar debug2=\"no\";\nvar outCueTest=[];\n\nvar sentenceCounter=0;\nvar sentenceRemainingWords=\"\";\nvar sentenceArray=[];\nvar sentenceWordsForCue=\"\";\n// make sure to remove \\n\\n hack from sentence to inprove translation accuracy.\n\n//{ identifier, start, end, pauseOnExit,direction,snapToLines,linePosition,textPosition,size,alignment, text, styles, wordCount, textLength, fullStop, sentenceCount, trailingWordCount, sentenceIndex, firstNonSentence};\n\n\n  const errors = [];\n debug1=\"made start\";\nlet identifier = \"\";\n  let pause_on_exit=false;\n  let region=null;\n  let direction=\"horizontal\";\n  let snap_to_lines=true;\n  let line=\"auto\";\n  let line_alignment=\"start\";\n  let position=\"auto\";\n  let size=100;\n  let text_alignment=\"center\";\n  let start = 0;\n  let end = 0.01;\n  let text = \"\";\n  let styles = \"\";\n\n  \n  let id = \"\";\n  let snapToLines = true;\n  let linePosition=\"auto\";\n  let textPosition=50;\n  let alignment=\"middle\";\n  let sentenceText = \"\";\n  let wordCount = 0;\n  let textLength=0;\n  let fullStop = -1;\n  let sentenceCount=0;\n  let sentenceIndex=0;\n  let sentenceWordCount=0;\n  let cueIndex=0;\n \nconst sentence2cues = cues\n    .map((cue, i) => {\n      \n        //return cue.text.split(' ').length;\n        //return cue.text.length;\n        sentenceIndex=cue.sentenceIndex;\n        sentence=sentences[sentenceIndex].translation;//get sentence from index\n        sentence=sentence + ' ';\n        sentenceArray=sentence.split(' ');\n        sentenceWordCount=sentenceArray.length;\n        trailingWordCount=cue.trailingWordCount;\n        wordCount=cue.wordCount;\n        wordCount=cue.wordCount;\n        fullStop=cue.fullStop;\n        sentenceCount=cue.sentenceCount;\n        \n        identifier=cue.identifier;\n        start=cue.start;\n        end=cue.end;\n        pauseOnExit= cue.pauseOnExit;\n        direction = cue.direction;\n        snapToLines = cue.snapToLines;\n        linePosition=cue.linePosition;\n        textPosition=cue.textPosition;\n        size = cue.size;\n        alignment=cue.alignment;        \n        //text=cue.text; //0928\n        styles=cue.styles;\n    \n    \n        if (trailingWordCount===0){\n            // sentence = cue\n            //text=sentence;\n            text=sentenceArray.join(' ')\n            text = text.replace(\"\\n\\n \",\" \");\n            text = text.trim();\n            //outCueTest.push(sentence);\n            cueIndex=cueIndex+1;\n\n            sentenceCounter=sentenceCounter+1\n            outCueTest.push(text); \n            cue.text=text.valueOf(); //20190930encodeURI(uri)\n            \n        } else {\n            \n            // Sentence covers multiple cues. Map by number of words\n            // loop cues until sentences are do\n// text for has sentence \n            // get number of words\n             //sentenceRemainingWords=sentence.split(' '); // put sentence words temp value\n             //sentenceArray=[];\n            \n            var bTest=true;\n            sentenceCounter=sentenceCounter+1\n            sentenceWordsForCue = sentenceArray.slice(0, wordCount+1).join(' '); \n                //.join(\" \");//trailingWordCount  trailing words for this cue index = number of words from \n               //sentenceRemainingWords = sentenceRemainingWords.slice(trailingWordCount+1);\n             \n            //20191002 sentences[sentenceIndex] = sentenceArray.slice(wordCount+1).join(\" \");\n            sentences[sentenceIndex].translation = sentenceArray.slice(wordCount+1).join(\" \");\n            \n           \n\n            text = sentenceWordsForCue;\n            //text = sentenceWordsForCue;\n            text = text.trim();\n            outCueTest.push(text);\n            cue.text=text.valueOf(); //20190930\n            \n\n                }\n        \n        //return { identifier,region,direction,snap_to_lines,line,line_alignment,position,size,text_alignment, start, end, text, styles }    \n         //return { identifier, start, end, pauseOnExit,direction,snapToLines,linePosition,textPosition,size,alignment, text, styles, wordCount, textLength,  trailingWordCount,sentenceCount,fullStop, sentenceIndex,i , sentenceCounter };\n\n    })\n    \n    \n\n\nmsg.debug1=debug1;\nmsg.debug2=debug2;\nvar outCues={};\nvar outSentences={};\n\ncues=sentence2cues;\nmsg.outCues=cues;\nmsg.outSentences=cues;\n//msg.sentence2cues=sentence2cues;\nmsg.outCueTest=outCueTest;\n\nreturn msg;","outputs":1,"noerr":0,"x":2310,"y":760,"wires":[["641003fe.15745c","bf153408.509018"]]},{"id":"641003fe.15745c","type":"debug","z":"2da74bbe.868f14","name":"sentenceToCue","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2735,"y":745,"wires":[]},{"id":"d014760e.e9bd18","type":"function","z":"2da74bbe.868f14","name":"get sentences v2.02 draft ","func":"// \n\n// loop cues\n// starting up first cue\n// start of sentence = cues[0].start\n// if full stop then \n// count words\n//end of sentence = percent of chars in cues duration*(word pos / cue.text.length)\n// duration becomes the  \n//clean and save sentence. replace /n with \" \".\n// any words remaining?\n// now start loop. \n// timePos = \n// countwords word_count= cue.text.split(' ').length;\n//\n// trailingWordCount is the number of words from the start of sentence within cue that spans to next cue.\nvar translations=[\"\"];\nmsg.translations=translations;\n\nvar strict=true;\nvar sentencesText=[];\nvar cues = msg.test11.cues;\n//word_count= cue.text.split(' ').length;\nvar mytext=\"\"; //bb0914\n\nfunction lastFullStop(text, nstart, nmax){\nvar sampleTxt= text.slice(nstart, nmax);\n//var sampleTxt= text;\nvar nPOS_period = sampleTxt.lastIndexOf(\".\");\nvar nPOS_question = sampleTxt.lastIndexOf(\"?\");\nvar nPOS_exclaim = sampleTxt.lastIndexOf(\"!\");\nvar POS= Math.max(nPOS_period,nPOS_question,nPOS_exclaim);\nreturn POS; // if none found returns -1. Otherwise returns position of punctuntion mark.\n//return nPOS_period;\n}\n\n\nfunction countWords (cues, strict) {\n  const errors = [];\n  let id = \"\";\n  let start = 0;\n  let end = 0.01;\n  let pauseOnExit= false;\n  let direction = \"horizontal\";\n  let snapToLines = true;\n  let linePosition=\"auto\";\n  let textPosition=50;\n  let size = 100;\n  let alignment=\"middle\";\n  let text = \"\";\n  let styles=\"\";\n  let wordCount = 0;\n  let textLength=0;\n  let fullStop = -1;\n  let sentenceIndex=-1;\n  let firstNonSentence = true;\n  const countWords = cues\n    .map((cue, i) => {\n      try {\n        //return cue.text.split(' ').length;\n        //return cue.text.length;\n        \n        trailingWordCount=0;\n        identifier=cue.identifier;\n        start=cue.start;\n        end=cue.end;\n        pauseOnExit= cue.pauseOnExit;\n        direction = cue.direction;\n        snapToLines = cue.snapToLines;\n        linePosition=cue.linePosition;\n        textPosition=cue.textPosition;\n        size = cue.size;\n        alignment=cue.alignment;        \n        text=cue.text;\n        text=text.replace(\"\\n\",\" \"); //0928\n        styles=cue.styles;\n        //wordCount=cue.text.split(' ').length;\n        wordCount=text.split(' ').length; //0928\n        //textLength=cue.text.length;\n        textLength=text.length;\n        //fullStop = lastFullStop(cue.text, 0,textLength) ;\n        fullStop = lastFullStop(text, 0,textLength) ;\n        //sentenceFound= cue.text.match(/[\"’]?[\\d|A-Z][^.?!]+((?![.?!][’\"]?\\s[\"’]?[A-Z][^.?!]).)+[.?!’\"]+/g);\n        sentenceFound= text.match(/[\"’]?[\\d|A-Z][^.?!]+((?![.?!][’\"]?\\s[\"’]?[A-Z][^.?!]).)+[.?!’\"]+/g);\n        // do formatting here?\n       // var samplePOS = cue.text.indexOf(\": \"); // this is an exception. Colon can mess up translation so add couple of new lines. Remove after translation.\n       // if (samplePOS !== -1){cue.text = cue.text.slice(0,samplePOS+1) + \"\\n\\n\" + cue.text.substr(samplePOS+1);}\n           var samplePOS = text.indexOf(\": \"); // this is an exception. Colon can mess up translation so add couple of new lines. Remove after translation.\n        if (samplePOS !== -1){text = text.slice(0,samplePOS+1) + \"\\n\\n\" + text.substr(samplePOS+1);}\n        \n        if (sentenceFound){\n            sentenceCount=sentenceFound.length\n            \n            //Need to build the main text file here. Might requires '/n' between sentences. Decided against /n 20190914. Use space instead\n            /*\n              if (sentenceCount<=1){\n              // add a /n to end of each sentence. Will have to get position of each end of sentance\n            mytext=mytext+cue.text+\"\\n\";}else{\n            // otherwise do not add \\n. The sentence spans a cue.\n            /when utting back together may be able to make use of fullstop.                         */\n        }else{\n                sentenceCount=0}\n\n//bb 0914\n// trailingWordCount is the number of words from the start of sentence within cue that spans to next cue.\n        // mytext=mytext+cue.text+\" \";\n        if (!firstNonSentence && fullStop == textLength-1){sentenceCount=1;}\n        \n        // Need to know how many words are not in a sentence or trailing words after a sentence in cue. Will be used to put sentences back into cues \n        if (sentenceCount===0) {\n            trailingWordCount=wordCount;\n            //mytext=mytext+\" \"+cue.text;\n            mytext=mytext+\" \"+ text; //0928\n            //0926\n            //sentenceIndex = sentenceIndex +1;\n            \n                if (firstNonSentence) {firstNonSentence = false; sentenceIndex = sentenceIndex +1; }           \n            \n            //if (cue.text.startsWith(\"[\") && cue.text.endsWith(\"]\") ){  //0928\n            if (text.startsWith(\"[\") && text.endsWith(\"]\") ){\n                sentencesText.push(mytext+\"\\n\\n\"); \n                mytext=\"\"; \n                trailingWordCount=0\n                firstNonSentence = true; \n                //sentenceIndex = sentenceIndex +1;  \n            } \n            //if (cue.text.startsWith(0,1)==\"[\" && cue.text.substr(cue.text.length-1,1)==\"]\" ){sentencesText.push(cue.text+\"/n/n\")}\n            if (fullStop !==-1){\n             //mytext=mytext+cue.text+\" \"; //0926\n             mytext=mytext+text+\" \"; //0928\n             sentencesText.push(mytext);\n             sentenceIndex = sentenceIndex +1;\n             if (firstNonSentence) {firstNonSentence = true; }\n             mytext=\"\";\n            }       \n        }\n            else{\n               \n            if (textLength > fullStop +1) {\n            \n            // this does have at least one sentence\n            // there is a trailing word count that must be carried over to next sentence.    \n            trailingWordCount= (text.slice(fullStop)).split(' ').length-1  //0928\n            mytext=mytext+\" \"+text.slice(0,fullStop); //0928\n            sentencesText.push(mytext); //bb09 19 test for array of sentences\n            \n            // therfore does need to increment to next sentence\n            sentenceIndex = sentenceIndex+1\n             \n             //  trailing words to be carred over.\n            mytext=text.slice(fullStop)+\" \"; //0928\n                            \n            } else {\n                // full sentence. no trailing words to be carred over.\n             mytext=mytext+\" \"+text+\" \"; //0928\n             sentencesText.push(mytext);\n             if (firstNonSentence) {sentenceIndex = sentenceIndex +1; }\n             //sentenceIndex = sentenceIndex+1\n             firstNonSentence = true; // reset. full sentence \n             // full sentence. no trailing words to be carred over.\n            mytext=\"\";   \n            }\n            if (fullStop ==-1){\n                // no sentence found. no full stop. carry over any prior words and this cue text.\n               mytext=mytext+\" \"+cue.text+\" \" \n               if (firstNonSentence) {firstNonSentence = false; sentenceIndex = sentenceIndex +1; }\n            }\n         }\n        if (i >= cues.length-1){\n                    //last cue. Push even if there is no end of sentence.\n            trailingWordCount=0;        \n           sentencesText.push(mytext);\n           firstNonSentence = true;\n        }\n                \n         return { identifier, start, end, pauseOnExit,direction,snapToLines,linePosition,textPosition,size,alignment, text, mytext, styles, wordCount, textLength, fullStop, sentenceCount, trailingWordCount, sentenceIndex, firstNonSentence};\n      } catch (e) {\n        errors.push(e);\n        return null;\n      }\n    })\n    .filter(Boolean);\n  return {\n    cues: countWords,\n    errors\n  };\n}\n//count sentences per cue\n//collect text\n// Simple full stop regex \\!|\\?|\\.\n// sentence REGEX [\"’]?[A-Z][^.?!]+((?![.?!][’\"]?\\s[\"’]?[A-Z][^.?!]).)+[.?!’\"]+\n//msg.sentencesText =sentencesText;\nmsg.mysentences =sentencesText;\nmsg.sentences= countWords(cues, strict); \n//msg.myFullText=mytext //.replace(/\\n/g, ' ');\nreturn msg;","outputs":1,"noerr":0,"x":2330,"y":430,"wires":[["c6d28149.1caaa","f2d13a8d.b75958"]]},{"id":"f2d13a8d.b75958","type":"debug","z":"2da74bbe.868f14","name":"sentences","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2526.666648864746,"y":438.88882064819336,"wires":[]},{"id":"47ab04e.7b606fc","type":"function","z":"2da74bbe.868f14","name":"segmenter raw","func":"var strict=true;\n\n//const parse = require('./parser').parse;\n\nfunction segment (input, segmentLength) {\n  segmentLength = segmentLength || 10;\n\n//  const parsed = parse(input);\n  const parsed = input;\n  \n  const segments = [];\n\n  let cues = [];\n  let queuedCue = null;\n  let currentSegmentDuration = 0;\n  let totalSegmentsDuration = 0;\n\n  /**\n   * One pass segmenting of cues\n   */\n  parsed.cues.forEach((cue, i) => {\n    const firstCue = i === 0;\n    const lastCue = i === parsed.cues.length - 1;\n    const start = cue.start;\n    const end = cue.end;\n    const nextStart = lastCue ? Infinity : parsed.cues[i + 1].start;\n    const cueLength = firstCue ? end : end - start;\n    const silence = firstCue ? 0 : (start - parsed.cues[i - 1].end);\n\n    currentSegmentDuration = currentSegmentDuration + cueLength + silence;\n\n    debug('------------');\n    debug(`Cue #${i}, segment #${segments.length + 1}`);\n    debug(`Start ${start}`);\n    debug(`End ${end}`);\n    debug(`Length ${cueLength}`);\n    debug(`Total segment duration = ${totalSegmentsDuration}`);\n    debug(`Current segment duration = ${currentSegmentDuration}`);\n    debug(`Start of next = ${nextStart}`);\n\n    // if there's a boundary cue queued, push and clear queue\n    if (queuedCue) {\n      cues.push(queuedCue);\n      currentSegmentDuration += queuedCue.end - totalSegmentsDuration;\n      queuedCue = null;\n    }\n\n    cues.push(cue);\n\n    // if a cue passes a segment boundary, it appears in both\n    let shouldQueue = nextStart - end < segmentLength &&\n                        silence < segmentLength &&\n                        currentSegmentDuration > segmentLength;\n\n    if (shouldSegment(totalSegmentsDuration, segmentLength, nextStart,\n      silence)) {\n\n      const duration = segmentDuration(lastCue, end, segmentLength,\n        currentSegmentDuration,\n        totalSegmentsDuration);\n\n      segments.push({ duration, cues });\n\n      totalSegmentsDuration += duration;\n      currentSegmentDuration = 0;\n      cues = [];\n    } else {\n      shouldQueue = false;\n    }\n\n    if (shouldQueue) {\n      queuedCue = cue;\n    }\n  });\n\n  return segments;\n}\n\nfunction shouldSegment (total, length, nextStart, silence) {\n\n  // this is stupid, but gets one case fixed...\n  const x = alignToSegmentLength(silence, length);\n  const nextCueIsInNextSegment = silence <= length ||\n                                 x + total < nextStart;\n\n  return nextCueIsInNextSegment && nextStart - total >= length;\n}\n\nfunction segmentDuration (lastCue, end, length, currentSegment, totalSegments) {\n  let duration = length;\n\n  if (currentSegment > length) {\n    duration = alignToSegmentLength(currentSegment - length, length);\n  }\n\n  // make sure the last cue covers the whole time of the cues\n  if (lastCue) {\n    duration = parseFloat((end - totalSegments).toFixed(2));\n  } else {\n    duration = Math.round(duration);\n  }\n\n  return duration;\n}\n\nfunction alignToSegmentLength (n, segmentLength) {\n  n += segmentLength - n % segmentLength;\n  return n;\n}\n\nconst debugging = false;\n\n/* istanbul ignore next */\nfunction debug (m) {\n  if (debugging) {\n    console.log(m);\n  }\n}\nmsg.WEBVTT2= segment(msg.sentences, 7200);\n//msg.WEBVTT2= segment(msg.outCueTest, 7200);\nreturn msg;","outputs":1,"noerr":0,"x":2300,"y":820,"wires":[["d2103a49.a58778"]]},{"id":"d2103a49.a58778","type":"function","z":"2da74bbe.868f14","name":"WEBVTT Creator","func":"// MIT license \n//source: https://github.com/osk/node-webvtt/blob/master/lib/parser.js\n\nvar strict=true;\n\n//const segment = require('./segmenter').segment;\n\nfunction hlsSegment (input, segmentLength, startOffset) {\n\n  if (typeof startOffset === 'undefined') {\n    startOffset = '900000';\n  }\n\n  //const segments = segment(input, segmentLength);\n    const segments = input;\n  const result = [];\n  \n\nsegments.forEach((seg, i) => {\n\n// took this out for our purposes. X-TIMESTAMP-MAP=MPEGTS:${startOffset},LOCAL:00:00:00.000\n// fails parsing using // source: https://github.com/osk/node-webvtt/blob/master/lib/parser.js\n// Parser needs fixing?\nconst content = `WEBVTT\nX-TIMESTAMP-MAP=MPEGTS:${startOffset},LOCAL:00:00:00.000\n\n${printableCues(seg.cues)}\n`;\n    const filename = generateSegmentFilename(i);\n    result.push({ filename, content });\n  });\n\n  \n  \n  return result;\n}\n\nfunction hlsSegmentPlaylist (input, segmentLength) {\n\n  const segmented = segment(input, segmentLength);\n\n  const printable = printableSegments(segmented);\n  const longestSegment = Math.round(findLongestSegment(segmented));\n\n  const template = `#EXTM3U\n#EXT-X-TARGETDURATION:${longestSegment}\n#EXT-X-VERSION:3\n#EXT-X-MEDIA-SEQUENCE:0\n#EXT-X-PLAYLIST-TYPE:VOD\n${printable}\n#EXT-X-ENDLIST\n`;\n  return template;\n}\n\nfunction pad (num, n) {\n  const padding = '0'.repeat(Math.max(0, n - num.toString().length));\n\n  return `${padding}${num}`;\n}\n\nfunction generateSegmentFilename (index) {\n  return `${index}.vtt`;\n}\n\nfunction printableSegments (segments) {\n  const result = [];\n  segments.forEach((seg, i) => {\n    result.push(`#EXTINF:${seg.duration.toFixed(5)},\n${generateSegmentFilename(i)}`);\n  });\n\n  return result.join('\\n');\n}\n\nfunction findLongestSegment (segments) {\n  let max = 0;\n  segments.forEach((seg) => {\n    if (seg.duration > max) {\n      max = seg.duration;\n    }\n  });\n\n  return max;\n}\n\nfunction printableCues (cues) {\n  const result = [];\n  cues.forEach((cue) => {\n    result.push(printableCue(cue));\n  });\n\n  return result.join('\\n\\n');\n}\n\nfunction printableCue (cue) {\n  const printable = [];\n// if there is an identifer, include it.\n//printable.push\n  if (cue.identifier) {\n    printable.push(cue.identifier);\n  }\n\n  const start = printableTimestamp(cue.start);\n  const end = printableTimestamp(cue.end);\n\n  const styles = cue.styles ? `${cue.styles}` : '';\n\n  // always add a space after end timestamp, otherwise JWPlayer will not\n  // handle cues correctly\n  printable.push(`${start} --> ${end} ${styles}`);\n\n  printable.push(cue.text);\n\n  return printable.join('\\n');\n}\n\nfunction printableTimestamp (timestamp) {\n  const ms = (timestamp % 1).toFixed(3);\n  timestamp = Math.round(timestamp - ms);\n  const hours = Math.floor(timestamp / 3600);\n  const mins = Math.floor((timestamp - (hours * 3600)) / 60);\n  const secs = timestamp - (hours * 3600) - (mins * 60);\n\n  // TODO hours aren't required by spec, but we include them, should be config\n  const hourString = `${pad(hours, 2)}:`;\n  return `${hourString}${pad(mins, 2)}:${pad(secs, 2)}.${pad(ms * 1000, 3)}`;\n}\n\nvar WEBVTT3 = hlsSegment(msg.WEBVTT2, 0, 0);// must have child .cues\nmsg.payload=WEBVTT3[0].content\nreturn msg;","outputs":1,"noerr":0,"x":2320,"y":855,"wires":[["6902817f.67be7","97440c75.d2b1d"]]},{"id":"6902817f.67be7","type":"debug","z":"2da74bbe.868f14","name":"WebVTT","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2740.000045776367,"y":898.8889751434326,"wires":[]},{"id":"bf153408.509018","type":"change","z":"2da74bbe.868f14","name":"","rules":[{"t":"set","p":"senteces.meta","pt":"msg","to":"test11.meta","tot":"msg"},{"t":"set","p":"senteces.errors","pt":"msg","to":"test11.errors","tot":"msg"},{"t":"set","p":"senteces.valid","pt":"msg","to":"test11.valid","tot":"msg"},{"t":"set","p":"senteces.strict","pt":"msg","to":"senteces.strict","tot":"msg"}],"action":"","property":"","from":"","to":"","reg":false,"x":2300,"y":795,"wires":[["8a961eb9.78ebb","47ab04e.7b606fc"]]},{"id":"8a961eb9.78ebb","type":"debug","z":"2da74bbe.868f14","name":"afterchange","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2734.9999618530273,"y":796.6666393280029,"wires":[]},{"id":"928c754e.8bfdb8","type":"delay","z":"2da74bbe.868f14","name":"","pauseType":"rate","timeout":"10","timeoutUnits":"seconds","rate":"1","nbRateUnits":"5","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":2300,"y":500,"wires":[["6cbd5629.3b0198"]]},{"id":"89ee9b24.600b58","type":"function","z":"2da74bbe.868f14","name":"set translate v2","func":"\nvar translate_apiurl = flow.get(\"translate_apiurl\");\nvar translate_basic_auth_key = flow.get(\"translate_basic_auth_key\");\n/*\nPOST /language-translator/api/v3/translate?version=2018-05-01 HTTP/1.1\nHost: gateway.watsonplatform.net\nContent-Type: application/json\n\nAuthorization: Basic XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n{\"text\": [\"Hello, world! \", \"How are you?\"], \"model_id\":\"en-de\"};\n\n\n*/\n//var payloadTest = msg.payload;\n//msg.payload={};\n\n// hard coded version number in api call. could remove and put into var.\nmsg.url = flow.get(\"translate_apiurl\")+ \"?version=2018-05-01\";\n//msg.url =\"https://api.eu-de.language-translator.watson.cloud.ibm.com/language-translator/api/v3/translate?version=2018-05-01\"\n// to get Basic Authorization key:\n// base_encode \"apikey:\" + your api key. Store in flow vars Use ISO-8859-1 character set \nmsg.headers = {\"Authorization\": \"Basic \" + translate_basic_auth_key,\"content-type\":\"application/json\"};\nmsg.payload={\"text\": msg.payload, \"model_id\":msg.translate_model_id};  // NOTE: This is translations model: https://cloud.ibm.com/docs/services/language-translator?topic=language-translator-translation-models\n//msg.payload={\"text\": msg.payload, \"model_id\":\"en-fr\"};  // NOTE: This is translations model: https://cloud.ibm.com/docs/services/language-translator?topic=language-translator-translation-models\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2275,"y":595,"wires":[["792236c5.088838","3144ac23.e0ead4"]]},{"id":"792236c5.088838","type":"http request","z":"2da74bbe.868f14","name":"POST translate call","method":"POST","ret":"obj","url":"","tls":"","x":2480,"y":590,"wires":[["aa064585.b07b08","bc137a04.d0f398"]]},{"id":"59ef9d52.eca1f4","type":"debug","z":"2da74bbe.868f14","name":"flatten3","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2736.1112098693848,"y":710.000078201294,"wires":[]},{"id":"3144ac23.e0ead4","type":"debug","z":"2da74bbe.868f14","name":"chunked","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2731.1112098693848,"y":536.1111807823181,"wires":[]},{"id":"aa064585.b07b08","type":"debug","z":"2da74bbe.868f14","name":"translate","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2735,"y":575,"wires":[]},{"id":"d2e8f093.81c08","type":"debug","z":"2da74bbe.868f14","name":"parser","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2525.555675506592,"y":398.33329010009766,"wires":[]},{"id":"6cbd5629.3b0198","type":"function","z":"2da74bbe.868f14","name":"Flatten Array v2","func":"//Flatten Array v2. Switched to concat from mozilla .flat\nvar arrayToFlatten = msg.payload;\nvar flattenedArray = [].concat.apply([], arrayToFlatten);\nmsg.payload=flattenedArray\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2305,"y":530,"wires":[["89ee9b24.600b58","16271ee4.d4dc91"]]},{"id":"bc137a04.d0f398","type":"function","z":"2da74bbe.868f14","name":"Flatten Array v2","func":"var arrayToFlatten = msg.payload.translations;\n\nvar flattenedArray = [].concat.apply([], arrayToFlatten);\nmsg.payload=flattenedArray\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2300,"y":660,"wires":[["ebcb79a4.bc4fd8","29f47a35.177726"]]},{"id":"16271ee4.d4dc91","type":"debug","z":"2da74bbe.868f14","name":"flatten1","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":2733.333297729492,"y":500.00006771087646,"wires":[]},{"id":"f887e5b2.c73d98","type":"function","z":"2da74bbe.868f14","name":"Flatten Array v2","func":"//Flatten Array v2. Switched to concat from mozilla .flat\nvar arrayToFlatten = msg.payload;\nvar flattenedArray = [].concat.apply([], arrayToFlatten);\nmsg.payload=flattenedArray\n\n\nreturn msg;","outputs":1,"noerr":0,"x":2300,"y":725,"wires":[["b358f685.b35ea8","59ef9d52.eca1f4"]]},{"id":"c26c5c59.d7346","type":"function","z":"2da74bbe.868f14","name":"set get Captions","func":"\nvar video_id=msg.video_id;\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\n\n\nvar url = apihost + \"/videos/\" + video_id + \"/captions.json\";\n\n\nvar PutHeader = {\n    \"content-type\":\"application/json\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\nmsg.url = url;\nmsg.headers = PutHeader;\n\nreturn msg;","outputs":1,"noerr":0,"x":245,"y":350,"wires":[["354f3620.13d62a"]]},{"id":"354f3620.13d62a","type":"http request","z":"2da74bbe.868f14","name":"get SM API call","method":"GET","ret":"obj","url":"","tls":"","x":420,"y":350,"wires":[["de9b207b.a88f8","5160834d.35c49c"]]},{"id":"5160834d.35c49c","type":"function","z":"2da74bbe.868f14","name":"which Caption source field flow.get","func":"\nvar captions  = [];\ncaptions= msg.payload.captions;\nvar language_source=flow.get(\"language_source\"); // default source language set in vars\n\nvar translate_field= flow.get(\"translate_field\"); // this must be field type list\nvar caption_id_field = flow.get(\"caption_id_field\");\n//msg.video_download_url = msg.video_object.video_download_url; //need download url\n\n\n\n//captions.json\n\n///*\n// needs to process full job\nif (captions.length>0){\n    // found one or more captions\n    // get is_default\n    \n    \n    for (i=0; i<captions.length; i++) {\n        if (captions[i].is_default === true){\n        // are there any listed? This is an array.\n        language_source=captions[i].language;\n        msg.language_source=language_source;\n             return [msg,null];  \n\n        }else\n                msg.language_source=language_source;\n            \n        \n    \n    } return [msg,null];  \n    \n}\n\n\n\n\nreturn  [null,msg];\n\n","outputs":2,"noerr":0,"x":305,"y":385,"wires":[["e1a9430b.2bdf7","be27b016.6a0a6"],["8e9b607d.17556"]],"outputLabels":["Translate","None"]},{"id":"e1a9430b.2bdf7","type":"debug","z":"2da74bbe.868f14","name":"source language","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":665,"y":435,"wires":[]},{"id":"8e9b607d.17556","type":"debug","z":"2da74bbe.868f14","name":"No lang","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":650,"y":465,"wires":[]},{"id":"b08a77bf.c03c68","type":"function","z":"2da74bbe.868f14","name":"reset translate field values","func":"var apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id;\nvar translate_field = flow.get(\"translate_field\");\n\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/custom-metadata/{{field_id}}.json  //update field\n\n//\n\nvar url = apihost + \"/videos/\" + video_id + \"/custom-metadata/\" + translate_field + \".json\";  // field_id 7906 in IBM Video Streaming. Need configuration capability.\n\n\nvar PutHeader = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\nvar translateText='';\n\nmsg.url = url;\nmsg.method=\"PUT\";\nmsg.headers = PutHeader;\nmsg.payload = \"value=\" + translateText; //\"value=Bubba, Billy, Fred\"; // field_id in SM is Speakers tag list\nmsg.body=\"value=\" + translateText;\nreturn msg;","outputs":1,"noerr":0,"x":1470,"y":555,"wires":[["68843716.402658"]]},{"id":"52da64da.43fe0c","type":"function","z":"2da74bbe.868f14","name":"set status_log_field value","func":"var apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id;\nvar status_log_field = flow.get(\"status_log_field\");\n//var metadata  = [];\n//metadata= msg.payload.metadata;\n\nvar status_log_values=\"\";\nvar myDate = new Date().toISOString();\n\n\nstatus_log_values = flow.get(video_id+\"status_log\");\n\n\nstatus_log_values= status_log_values + myDate + \" Translate start: \"+ msg.translate_model_id + \", \";\n//translateText= \" start translate: \"+ msg.translate_model_id;\n\nflow.set((video_id+\"status_log\"),status_log_values);\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/custom-metadata/{{field_id}}.json  //update field\n\n//\n\nvar url = apihost + \"/videos/\" + video_id + \"/custom-metadata/\" + status_log_field + \".json\";  // field_id 7906 in IBM Video Streaming. Need configuration capability.\n\n\nvar PutHeader = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\n\nmsg.url = url;\nmsg.method=\"PUT\";\nmsg.headers = PutHeader;\nmsg.payload = \"value=\" + status_log_values; //\"value=Bubba, Billy, Fred\"; // field_id in SM is Speakers tag list\n//msg.body=\"value=\" + translateText;\nreturn msg;","outputs":1,"noerr":0,"x":1730,"y":525,"wires":[["c6ea9bf.61e5268"]]},{"id":"68843716.402658","type":"http request","z":"2da74bbe.868f14","name":"Update SM field value","method":"use","ret":"txt","url":"","tls":"","x":1470,"y":600,"wires":[["a80e8f24.f9752"]]},{"id":"a80e8f24.f9752","type":"debug","z":"2da74bbe.868f14","name":"reset traanslate","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1685,"y":645,"wires":[]},{"id":"980f4ab1.731688","type":"delay","z":"2da74bbe.868f14","name":"","pauseType":"delay","timeout":"8","timeoutUnits":"hours","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":1715,"y":570,"wires":[["b33d0b06.c67058"]]},{"id":"b33d0b06.c67058","type":"function","z":"2da74bbe.868f14","name":"remove flow var","func":"var video_id = msg.video_id;\nflow.set((video_id+\"status_log\"),undefined);\nreturn msg;","outputs":1,"noerr":0,"x":1730,"y":600,"wires":[[]]},{"id":"e5ceb19e.13fc8","type":"delay","z":"2da74bbe.868f14","name":"","pauseType":"delay","timeout":"10","timeoutUnits":"seconds","rate":"1","nbRateUnits":"1","rateUnits":"second","randomFirst":"1","randomLast":"5","randomUnits":"seconds","drop":false,"x":852.75,"y":755.75,"wires":[["f370f4ad.ca2a38"]]},{"id":"50fd420c.ccaa5c","type":"function","z":"2da74bbe.868f14","name":"set status_log_field value","func":"var apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id;\nvar status_log_field = flow.get(\"status_log_field\");\n//var metadata  = [];\n//metadata= msg.payload.metadata;\n\nvar status_log_values=\"\";\nvar myDate = new Date().toISOString();\n\n\nstatus_log_values = flow.get(video_id+\"status_log\");\n\n\nstatus_log_values= status_log_values + myDate + \" Translate complete: \"+ msg.translate_model_id + \", \";\n//translateText= \" start translate: \"+ msg.translate_model_id;\n\nflow.set((video_id+\"status_log\"),status_log_values);\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/custom-metadata/{{field_id}}.json  //update field\n\n//\n\nvar url = apihost + \"/videos/\" + video_id + \"/custom-metadata/\" + status_log_field + \".json\";  // field_id 7906 in IBM Video Streaming. Need configuration capability.\n\n\nvar PutHeader = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\n\nmsg.url = url;\nmsg.method=\"PUT\";\nmsg.headers = PutHeader;\nmsg.payload = \"value=\" + status_log_values; //\"value=Bubba, Billy, Fred\"; // field_id in SM is Speakers tag list\n//msg.body=\"value=\" + translateText;\nreturn msg;","outputs":1,"noerr":0,"x":575,"y":675,"wires":[["e5ceb19e.13fc8"]]},{"id":"be27b016.6a0a6","type":"function","z":"2da74bbe.868f14","name":"set status_log_field value per run","func":"// this creates or resets video_id status_log variable.\n// example: 1234567status_log flow varable is set to \"\"\n// this means each run will ensure only the most recent run is recorded \n\n\nvar video_id = msg.video_id;\n\nflow.set((video_id+\"status_log\"),\"\");\n\n\nreturn msg;","outputs":1,"noerr":0,"x":305,"y":415,"wires":[["80edba00.c3e848"]]},{"id":"329d6fb9.5d385","type":"function","z":"2da74bbe.868f14","name":"status","func":"if (msg.statusCode !=200){\n    return [msg,null]\n}else \n\nreturn [null,msg]","outputs":2,"noerr":0,"x":1425,"y":345,"wires":[["94377831.878c18"],["6d6670aa.2d068"]],"outputLabels":["fail","ok"]},{"id":"94377831.878c18","type":"function","z":"2da74bbe.868f14","name":"set status_log_field value (fail)","func":"var apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar video_id = msg.video_id;\nvar status_log_field = flow.get(\"status_log_field\");\n//var metadata  = [];\n//metadata= msg.payload.metadata;\n\nvar status_log_values=\"\";\nvar myDate = new Date().toISOString();\n\n\nstatus_log_values = flow.get(video_id+\"status_log\");\n\n\nstatus_log_values= status_log_values + myDate + \" Translate failed: can't find caption \"+msg.language_source + \". Check video default captions setting. \";\n//translateText= \" start translate: \"+ msg.translate_model_id;\n\nflow.set((video_id+\"status_log\"),status_log_values);\n\n//https://{{channel_apihost}}/videos/{{VIDEO_ID}}/custom-metadata/{{field_id}}.json  //update field\n\n//\n\nvar url = apihost + \"/videos/\" + video_id + \"/custom-metadata/\" + status_log_field + \".json\";  // field_id 7906 in IBM Video Streaming. Need configuration capability.\n\n\nvar PutHeader = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\n\nmsg.url = url;\nmsg.method=\"PUT\";\nmsg.headers = PutHeader;\nmsg.payload = \"value=\" + status_log_values; //\"value=Bubba, Billy, Fred\"; // field_id in SM is Speakers tag list\n//msg.body=\"value=\" + translateText;\nreturn msg;","outputs":1,"noerr":0,"x":1710,"y":335,"wires":[["f903debf.5a30a"]]},{"id":"f903debf.5a30a","type":"link out","z":"2da74bbe.868f14","name":"translate caption NF","links":["1fbc9ae5.f058f5","bd21bd87.4673a"],"x":1875,"y":335,"wires":[]},{"id":"1fbc9ae5.f058f5","type":"link in","z":"2da74bbe.868f14","name":"translate status write","links":["f903debf.5a30a","c6ea9bf.61e5268"],"x":710,"y":735,"wires":[["e5ceb19e.13fc8"]]},{"id":"cbd9745b.00ad38","type":"debug","z":"2da74bbe.868f14","name":"return Code","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","x":1670,"y":300,"wires":[]},{"id":"f8fa8c59.45173","type":"inject","z":"2da74bbe.868f14","name":"","topic":"","payload":"","payloadType":"date","repeat":"","crontab":"","once":false,"onceDelay":0.1,"x":1035,"y":25,"wires":[["7824d096.963da","fe3450fd.d6643","fe93d150.1aa51"]]},{"id":"7824d096.963da","type":"function","z":"2da74bbe.868f14","name":"get Custommetadata Video","func":"var video_id = msg.video_id;\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar language_source = msg.language_source;\n\n\n\n//https://{{channel_apihost}}/custom-metadata-fields.json?filter[type]=video\nvar url = apihost + \"/custom-metadata-fields.json?filter[type]=video\"\n\nvar headers = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\nmsg.method=\"GET\";\nmsg.url = url;\nmsg.headers = headers;\nmsg.payload={};\n\nreturn msg;","outputs":1,"noerr":0,"x":1430,"y":30,"wires":[["8cdb939e.9e04b"]]},{"id":"fe3450fd.d6643","type":"function","z":"2da74bbe.868f14","name":"get Channel list","func":"var video_id = msg.video_id;\nvar apihost = flow.get(\"SMapihost\"); //SM hostURL\nvar access_token= flow.get(\"access_token\");\nvar language_source = msg.language_source;\n\n\nvar url = apihost + \"/users/self/channels.json\"\n\nvar headers = {\n    \"content-type\":\"application/x-www-form-urlencoded\",\n    \"Authorization\":\"Bearer \" + access_token,\n    \"Accepts\": \"application/json\"\n\n    };\n\nmsg.method=\"GET\";\nmsg.url = url;\nmsg.headers = headers;\nmsg.payload={};\n\nreturn msg;","outputs":1,"noerr":0,"x":1395,"y":63,"wires":[["668e1769.738b98"]]},{"id":"1df62338.afcaad","type":"debug","z":"2da74bbe.868f14","name":"Metadata fields","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1955,"y":30,"wires":[]},{"id":"5e38e17c.978dc","type":"debug","z":"2da74bbe.868f14","name":"Channel List","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1945,"y":60,"wires":[]},{"id":"8cdb939e.9e04b","type":"http request","z":"2da74bbe.868f14","name":"get metatdata fields","method":"use","ret":"obj","url":"","tls":"","x":1675,"y":30,"wires":[["1df62338.afcaad"]]},{"id":"668e1769.738b98","type":"http request","z":"2da74bbe.868f14","name":"get Channel list","method":"use","ret":"obj","url":"","tls":"","x":1660,"y":60,"wires":[["5e38e17c.978dc"]]},{"id":"b5d7febf.4e46f","type":"link in","z":"2da74bbe.868f14","name":"SM update (PUT)","links":["80322ae7.322328"],"x":935,"y":755,"wires":[["f370f4ad.ca2a38"]]},{"id":"c6ea9bf.61e5268","type":"link out","z":"2da74bbe.868f14","name":"translate status field","links":["1fbc9ae5.f058f5"],"x":1890,"y":525,"wires":[]},{"id":"5af1cfc7.36966","type":"comment","z":"2da74bbe.868f14","name":"Translate API call","info":"This line is the call to tranlate API.\n\nNeed to convert apikey to Basic token\n\nbase64_encode(apikey:<apikey>)\nhttps://cloud.ibm.com/docs/iam?topic=iam-iamapikeysforservices\n","x":2090,"y":595,"wires":[]},{"id":"fe93d150.1aa51","type":"function","z":"2da74bbe.868f14","name":"api key to token base64 encode","func":"/**\n * Encode string into Base64, as defined by RFC 4648 [http://tools.ietf.org/html/rfc4648].\n * As per RFC 4648, no newlines are added.\n *\n * Characters in str must be within ISO-8859-1 with Unicode code point <= 256.\n *\n * Can be achieved JavaScript with btoa(), but this approach may be useful in other languages.\n *\n * @param {string} str ASCII/ISO-8859-1 string to be encoded as base-64.\n * @returns {string} Base64-encoded string.\n * \n * https://gist.github.com/chrisveness/e121cffb51481bd1c142\n */\nfunction Base64Encode(str) {\n    if (/([^\\u0000-\\u00ff])/.test(str)) throw Error('String must be ASCII');\n\n    var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var o1, o2, o3, bits, h1, h2, h3, h4, e=[], pad = '', c;\n\n    c = str.length % 3;  // pad string to length of multiple of 3\n    if (c > 0) { while (c++ < 3) { pad += '='; str += '\\0'; } }\n    // note: doing padding here saves us doing special-case packing for trailing 1 or 2 chars\n\n    for (c=0; c<str.length; c+=3) {  // pack three octets into four hexets\n        o1 = str.charCodeAt(c);\n        o2 = str.charCodeAt(c+1);\n        o3 = str.charCodeAt(c+2);\n\n        bits = o1<<16 | o2<<8 | o3;\n\n        h1 = bits>>18 & 0x3f;\n        h2 = bits>>12 & 0x3f;\n        h3 = bits>>6 & 0x3f;\n        h4 = bits & 0x3f;\n\n        // use hextets to index into code string\n        e[c/3] = b64.charAt(h1) + b64.charAt(h2) + b64.charAt(h3) + b64.charAt(h4);\n    }\n    str = e.join('');  // use Array.join() for better performance than repeated string appends\n\n    // replace 'A's from padded nulls with '='s\n    str = str.slice(0, str.length-pad.length) + pad;\n\n    return str;\n}\n\n/**\n * Decode string from Base64, as defined by RFC 4648 [http://tools.ietf.org/html/rfc4648].\n * As per RFC 4648, newlines are not catered for.\n *\n * Can be achieved JavaScript with atob(), but this approach may be useful in other languages.\n *\n * @param {string} str Base64-encoded string.\n * @returns {string} Decoded ASCII/ISO-8859-1 string.\n */\nfunction Base64Decode(str) {\n    if (!(/^[a-z0-9+/]+={0,2}$/i.test(str)) || str.length%4 != 0) throw Error('Not base64 string');\n\n    var b64 = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n    var o1, o2, o3, h1, h2, h3, h4, bits, d=[];\n\n    for (var c=0; c<str.length; c+=4) {  // unpack four hexets into three octets\n        h1 = b64.indexOf(str.charAt(c));\n        h2 = b64.indexOf(str.charAt(c+1));\n        h3 = b64.indexOf(str.charAt(c+2));\n        h4 = b64.indexOf(str.charAt(c+3));\n\n        bits = h1<<18 | h2<<12 | h3<<6 | h4;\n\n        o1 = bits>>>16 & 0xff;\n        o2 = bits>>>8 & 0xff;\n        o3 = bits & 0xff;\n\n        d[c/4] = String.fromCharCode(o1, o2, o3);\n        // check for padding\n        if (h4 == 0x40) d[c/4] = String.fromCharCode(o1, o2);\n        if (h3 == 0x40) d[c/4] = String.fromCharCode(o1);\n    }\n    str = d.join('');  // use Array.join() for better performance than repeated string appends\n\n}\n\n//var string = 'apikey:KV02SOFCzBJi3tlpQ2TRPvpEOTa2o__ZctEtRby3WtIq';\n//LXI5CFFY0CDE47xnm2TsxN-2dUmcPOekRzp8LdSiQ16O\nvar string = \"apikey:\" + flow.get(\"translate_apikey\"); \nmsg.payload= Base64Encode(string);\nreturn msg;","outputs":1,"noerr":0,"x":1710,"y":95,"wires":[["c8eb08d9.499d78"]]},{"id":"c8eb08d9.499d78","type":"debug","z":"2da74bbe.868f14","name":"translate_token","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","x":1955,"y":90,"wires":[]}]